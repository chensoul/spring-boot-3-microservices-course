<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a37e17b9-6479-4a28-8885-4841dca9d8c9" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.github/workflows/maven-build.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="alwaysUpdateSnapshots" value="true" />
        <option name="localRepository" value="$MAVEN_REPOSITORY$" />
        <option name="useMavenConfig" value="false" />
        <option name="userSettingsFile" value="$USER_HOME$/.m2/settings.xml" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2nB3kpdCiAoIn2tXsz5nhvBkjk7" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml.grafana: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.tempo: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "JUnit.OrderServiceApplicationTests.executor": "Debug",
    "JUnit.OrderServiceApplicationTests.shouldSubmitOrder.executor": "Debug",
    "Maven.api-gateway [clean].executor": "Run",
    "Maven.inventory-service [package].executor": "Run",
    "Maven.notification-service [clean].executor": "Run",
    "Maven.notification-service [compile].executor": "Run",
    "Maven.notification-service [deploy].executor": "Run",
    "Maven.notification-service [install].executor": "Run",
    "Maven.notification-service [package].executor": "Run",
    "Maven.order-service [compile].executor": "Run",
    "Maven.spring-boot-3-microservices [clean].executor": "Run",
    "Maven.spring-boot-3-microservices [compile].executor": "Run",
    "Maven.spring-boot-3-microservices [package].executor": "Run",
    "Maven.spring-boot-3-microservices-course [clean].executor": "Run",
    "Maven.spring-boot-3-microservices-course [compile].executor": "Run",
    "Maven.spring-boot-3-microservices-course [package].executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "Spring Boot.InventoryServiceApplication.executor": "Debug",
    "Spring Boot.NotificationServiceApplication.executor": "Debug",
    "Spring Boot.OrderServiceApplication.executor": "Debug",
    "Spring Boot.ProductServiceApplication.executor": "Debug",
    "Spring Boot.TestOrderServiceApplication.executor": "Debug",
    "git-widget-placeholder": "SB3.3.4",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/chensoul/codes/github/spring-boot-3-microservices-course",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.3862069",
    "run.configurations.included.in.services": "true",
    "settings.editor.selected.configurable": "reference.projectsettings.compiler.annotationProcessors"
  },
  "keyToStringList": {
    "ChangesTree.GroupingKeys": [
      "module"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/docs" />
      <recent name="$PROJECT_DIR$/api-gateway" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/api-gateway" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.NotificationServiceApplication">
    <configuration name="OrderServiceApplicationTests" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="order-service" />
      <option name="PACKAGE_NAME" value="com.techie.microservices.order" />
      <option name="MAIN_CLASS_NAME" value="com.techie.microservices.order.OrderServiceApplicationTests" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplicationTests.shouldSubmitOrder" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="order-service" />
      <option name="PACKAGE_NAME" value="com.techie.microservices.order" />
      <option name="MAIN_CLASS_NAME" value="com.techie.microservices.order.OrderServiceApplicationTests" />
      <option name="METHOD_NAME" value="shouldSubmitOrder" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="spring-boot-3-microservices-course" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="spring-boot-3-microservices-course" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="api-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.techie.microservices.gateway.ApiGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AuthorizationApplication (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="authorization" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.techie.microservices.authorization.AuthorizationApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AuthorizationApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="authorization" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.programming.techie.authorization.AuthorizationApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="InventoryServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="inventory-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.techie.microservices.inventory.InventoryServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="notification-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.techie.microservices.notification.NotificationServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.techie.microservices.order.OrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="product-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.techie.microservices.product.ProductServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestOrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="order-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.techie.microservices.order.TestOrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.grafana: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="grafana" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.tempo: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="tempo" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.OrderServiceApplicationTests" />
        <item itemvalue="Spring Boot.TestOrderServiceApplication" />
        <item itemvalue="Docker.docker-compose.yml.tempo: Compose Deployment" />
        <item itemvalue="JUnit.OrderServiceApplicationTests.shouldSubmitOrder" />
        <item itemvalue="Docker.docker-compose.yml.grafana: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.22855.74" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="java:org.springframework.security:spring-security-core" />
    <option featureType="dependencySupport" implementationName="java:org.springframework:spring-core" />
    <option featureType="dependencySupport" implementationName="java:org.apache.kafka:kafka_2.13" />
    <option featureType="dependencySupport" implementationName="java:jakarta.validation:jakarta.validation-api" />
    <option featureType="dependencySupport" implementationName="java:org.springframework.data:spring-data-commons" />
    <option featureType="dependencySupport" implementationName="executable:kubectl" />
    <option featureType="dependencySupport" implementationName="java:org.springframework.cloud:spring-cloud-context" />
    <option featureType="dependencySupport" implementationName="java:org.hibernate.validator:hibernate-validator" />
    <option featureType="dependencySupport" implementationName="java:javax.enterprise:cdi-api" />
    <option featureType="dependencySupport" implementationName="java:org.springframework:spring-webmvc" />
    <option featureType="dependencySupport" implementationName="java:org.projectlombok:lombok" />
    <option featureType="dependencySupport" implementationName="executable:docker" />
    <option featureType="dependencySupport" implementationName="java:jakarta.persistence:jakarta.persistence-api" />
    <option featureType="dependencySupport" implementationName="java:org.flywaydb:flyway-core" />
    <option featureType="dependencySupport" implementationName="java:io.confluent:kafka-schema-registry-client" />
    <option featureType="dependencySupport" implementationName="java:org.springframework:spring-messaging" />
    <option featureType="dependencySupport" implementationName="java:org.springframework.boot:spring-boot" />
    <option featureType="dependencySupport" implementationName="java:org.wiremock:wiremock" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="refactor" />
    <MESSAGE value="add codes" />
    <MESSAGE value="rm files" />
    <option name="LAST_COMMIT_MESSAGE" value="rm files" />
  </component>
</project>